{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","SetCategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGFC,mBAAS,IAHP,mBAGhCC,EAHgC,KAGpBC,EAHoB,KAoBxC,OACC,sBAAMC,SAVc,SAACC,GACfA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKxB,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBd,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,QCRZG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,OACI,sBAAKC,UAAU,wCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNFK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDAEoBO,UAAUF,GAF9B,+DAGHG,MAAMR,GAHH,cAGhBS,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAVb,kBAcfY,GAde,4CAAH,sDC2BNM,MAvBf,YAAgC,IAAbb,EAAY,EAAZA,SAAY,EAEApB,mBAAS,IAFT,gCCDH,SAAEoB,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAhBAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GAEHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAItB,CAACd,IAKGe,EDnBgBK,CAAapB,IAA/BM,EALsB,EAKtBA,KAAMQ,EALgB,EAKhBA,QAGd,OACO,qCACL,oBAAIlB,UAAU,mCAAd,SAAkDI,EAASqB,gBAE1DP,EAAU,wCAAiB,KAE5B,qBAAKlB,UAAU,6CAAf,SAGEU,EAAKE,KAAI,SAACC,GAAD,OAAS,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEG9BY,EApBM,WACjB,IADuB,EAIe1C,mBAHhB,IADC,mBAIf2C,EAJe,KAIH5C,EAJG,KAM1B,OACC,eAAC,WAAD,WACC,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IACnB,uBACT,6BAEE4C,EAAWf,KAAI,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAA0BA,SAAUA,GAArBA,Y,MCd/CwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35546686.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({SetCategories}) => {\r\n\r\n\t/* crea useState encargado de cambia valor a input */\r\n\tconst [ inputValue, SetInputValue ] = useState('');\r\n\r\n\t/* cuando el input cambia seteamos el nuevo valor */\r\n\tconst handleInputChange = (e) => {\r\n\t\tSetInputValue(e.target.value);\r\n\t};\r\n\r\n\t/* cuando apretamos la tecla intro cambiamos el state de Categories que fue pasada por props */\r\n\tconst handleSumbit = (e) => {\r\n        e.preventDefault()       \r\n\r\n        if (inputValue.trim().length > 2){\r\n            SetCategories(cats => [inputValue, ...cats ])\r\n            SetInputValue('')\r\n        }\r\n        };\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSumbit}>\r\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n\t\t</form>\r\n    );\r\n    \r\n};\r\n\r\nAddCategory.propTypes = {\r\n    SetCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate_fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\t/* obtengo las imagenes atravez de la url y mapeo los datos necesarios */\r\n\texport const getGifs = async (category) => {\r\n\t\tconst url =\r\n\t\t`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=BpgW1iAU41aEPLTm6LpYtwESXq8c1UpE`\r\n\t\tconst resp = await fetch(url);\r\n\t\tconst { data } = await resp.json();\r\n\r\n\t\tconst gifs = data.map((img) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images.downsized_medium.url\r\n\t\t\t};\r\n\t\t});\r\n\t\t/* le asigno los gifs a las imagenes */\r\n\t\treturn gifs\r\n\t};","import React, { useState, useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {getGifs} from '../helpers/getGifs'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nfunction GifGrid({ category }) {\r\n\t/* state para cargar imagenes */\r\n\tconst [ images, SetImages ] = useState([]);\r\n\r\n\t/* creamos un custom Hooks para  ejecutar el hook */\r\n\tconst { data, loading } = useFetchGifs(category);\r\n\r\n\r\n\treturn (\r\n        <>\r\n\t\t\t<h3 className=\"animate__animated animate_fadeIn\">{category.toUpperCase()}</h3>\r\n\r\n\t\t\t{loading ? <p>Loading</p> : null}\r\n\r\n\t\t\t<div className=\"card-grid animate__animated animate_fadeIn\">\r\n\r\n\t\t\t\t{/* mapeo las imagenes en una lista */}\r\n\t\t\t\t{data.map((img) => <GifGridItem key={img.id} {...img} />)}\r\n\t\t\t</div>\r\n        </>\r\n\t);\r\n}\r\n\r\nexport default GifGrid;\r\n\r\n\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    /* se ejecuta la funcion dentro del useEffect \r\n    cuando el componente es renderizado por primera vez*/\r\n    useEffect( () => {\r\n  /* obtengo las imagenes atravez de la url y mapeo los datos necesarios a travez de la funcion */\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n\r\n","import { Fragment, useState } from 'react';\r\nimport React from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    let firstCategories = [ ];\r\n\r\n    /* crea un useState para manejar las categorias */\r\n    const [ categories, SetCategories ] = useState(firstCategories);\r\n    \r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n            {/* importa componente y le pasa como props el useState */}\r\n\t\t\t<AddCategory SetCategories={SetCategories}/>\r\n            <hr />\r\n\t\t\t<ol>\r\n                {/* mapea la lista de categorias e importa componente encargado de buscar las categorias */}\r\n\t\t\t\t{categories.map(category => <GifGrid key={ category } category={category} />)} \r\n\t\t\t</ol>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}